str foo {
    bar:  u32;
    baz:  f32;
}

fun example() {
    # pointer arithmetic
    # NOTE: Pointer arithmetic is supported in Mach. This is a risky operation and should be used with caution.
    var a: u8 = 10; # Variable a
    var b: u8 = 20; # Variable b

    var ptr: *u8 = @a; # Pointer to variable a

    ptr = ptr + 1; # Move the pointer to the next byte (assuming u8 is 1 byte)
    ptr = ptr - 1; # Move the pointer to the previous byte

    @ptr; # Dereference the pointer to get the value at that memory address
    ?ptr; # Get the address of the pointer itself

    @ptr = b; # Set the value at the pointer's address to b

    # array pointer arithmetic
    # NOTE: Pointer arithmetic can also be used with arrays.
    var arr: [_]i32 = [_]i32{1, 2, 3, 4, 5}; # Dynamic size array of i32
    var arr_ptr: *i32 = @arr; # Pointer to the first element of the array
    arr_ptr = arr_ptr + 1; # Move the pointer to the next element in the array
    @arr_ptr; # Dereference the pointer to get the value at that memory address
}
